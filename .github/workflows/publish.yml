name: Publish

on:
  release:
    types: [prereleased, released]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
          fetch-depth: 0
          filter: tree:0

      - name: Setup .NET environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.100"

      - name: Install Evaisa's netcode-patcher
        run: |
          dotnet tool install -g Evaisa.NetcodePatcher.Cli

      - name: Restore project
        run: |
          dotnet restore
          dotnet tool restore

      - name: Build and pack solution
        run: |
          dotnet pack -c Release

      - name: Set DLL_PATH environment variable
        run: echo "DLL_PATH=./*/$(cat ./*/dist/name.txt )" >> $GITHUB_ENV

      - name: Read DLL_PATH environment variable
        run: echo "$DLL_PATH"

      - name: Upload DLL artifact
        uses: actions/upload-artifact@v4
        with:
          name: mod-dll
          path: ${{ env.DLL_PATH }}

      - name: Upload Version artifact
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: ./*/dist/*.txt

      - name: Upload Thunderstore artifact
        uses: actions/upload-artifact@v4
        with:
          name: thunderstore-build
          path: ./*/dist/*.zip

      - name: Upload nupkg artifact
        uses: actions/upload-artifact@v4
        with:
          name: nupkg-build
          path: ./*/bin/Release/*.nupkg

  deploy-nuget:
    name: Deploy to NuGet
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4

      - name: Download nupkg artifact
        uses: actions/download-artifact@v4
        with:
          name: nupkg-build

      - name: Setup .NET environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.100"

      - name: Publish to NuGet.org
        run: |
          dotnet nuget push ./*/bin/Release/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  deploy-thunderstore:
    name: Deploy to Thunderstore
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4

      - name: Download Thunderstore artifact
        uses: actions/download-artifact@v4
        with:
          name: thunderstore-build

      - name: Setup .NET environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.100"

      - name: Install Evaisa's netcode-patcher
        run: |
          dotnet tool install -g Evaisa.NetcodePatcher.Cli

      - name: Restore dotnet tools
        run: |
          dotnet tool restore

      - name: Publish to Thunderstore
        env:
          TCLI_AUTH_TOKEN: ${{ secrets.THUNDERSTORE_API_KEY }}
        run: |
          dotnet build -target:PublishThunderstore

  deploy-curseforge:
    name: Deploy to CurseForge
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4

      - name: Download Version artifact
        uses: actions/download-artifact@v4
        with:
          name: version

      - name: Download DLL artifact
        uses: actions/download-artifact@v4
        with:
          name: mod-dll

      - name: Set MOD_NAME environment variable
        run: echo "MOD_NAME=./*/$(cat ./*/dist/version.txt )" >> $GITHUB_ENV

      - name: Read MOD_NAME environment variable
        run: echo "$MOD_NAME"

      - name: "Upload to CurseForge"
        uses: itsmeow/curseforge-upload@v3
        with:
          token: ${{ secrets.CURSEFORGE_API_KEY }}
          project_id: ${{ secrets.CURSEFORGE_PROJECTID }}
          game_endpoint: "lethal-company"
          game_versions: "0.50.0"
          file: mod-dll/*/*.dll
          display_name: ${{ env.MOD_NAME }}

  upload-release-artifacts:
    name: Add artifacts to Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Upload artifacts to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB }}
        run: gh release upload ${{ github.event.release.tag_name }} thunderstore-build/*/dist/*.zip nupkg-build/*/bin/Release/*.nupkg mod-dll/*/*.dll
